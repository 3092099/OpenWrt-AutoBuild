#!/usr/bin/env bash

name: Build OpenWrt

on:
  #schedule:
    #- cron: "0 0 1/2 * *"
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.set-matrix.outputs.release }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Generate build matrix
        id: set-matrix
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          echo "release=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT

          # -m 所有项目以逗号分隔，并填满整行行宽
          # -B 不列出任何以 ~ 字符结束的项目
          # -Q 将条目名称括上双引号

          echo "matrix={ \"config\": [ $(echo $(ls -mBQ *.config)) ] }" >> $GITHUB_OUTPUT

  build:
    name: Build OpenWrt
    runs-on: ubuntu-latest
    needs: matrix
    env:
      release: ${{ needs.matrix.outputs.release }}
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Init Env
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

          sudo apt update
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf npm python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          
          # sudo apt install --reinstall libc6
          # sudo systemctl daemon-reload
          sudo apt -y autoremove --purge
          sudo apt -y clean

          git clone --depth=1 https://github.com/openwrt-dev/po2lmo
          (cd po2lmo && sudo make && sudo make install)

          df -h

      - name: Compile The Firmware
        run: |
          sudo mkdir -p /mnt/openwrt

          cd /mnt/openwrt

          echo "${GITHUB_WORKSPACE}的内容："
          ls -alR ${GITHUB_WORKSPACE}
          echo "========================="
          
          sudo ${GITHUB_WORKSPACE}/build.sh "${GITHUB_WORKSPACE}/${{ matrix.config }}"

          ls -al
          if [ $(ls *.img.gz | wc -l) -le 0 ]; then
            echo "No firmware found"
            exit 1
          fi

          sudo zip -q -r $(basename "${{ matrix.config }}" .config | awk -F';' '{printf $1"-"$3}')-${{ env.release }}.zip *.img.gz

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v2
        if: success() && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.release }}
          files: /mnt/openwrt/*.zip

      - name: Telegram notification upload success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ♨️ 【${{ matrix.config }}】项目编译完成 ♨️
    
      - name: Push notification upload success
        uses: xhnmt/pushplus-action@main
        with:
          token: ${{ secrets.PUSH_PLUS_TOKEN }}
          title: "${{ matrix.config }} 项目编译完成"
          content: |
            ♨️ 【${{ matrix.config }}】项目编译完成 ♨️
